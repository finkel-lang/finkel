(:require Finkel.Core)

(defmodule GhcTest
  (export ghcTests)
  (require
   ;; Internal
   (TestAux))
  (import-when [:compile]
    ;; Internal
    (Finkel.Prelude)
    (Finkel.Core.Ghc))
  (import
   ;; hspec
   (Test.Hspec)

   ;; finkel-kernel
   (Language.Finkel)

   ;; finkel-core
   (Finkel.Core.Ghc)

   ;; Internal
   (TestAux)))

(defn (:: ghcTests Spec)
  (describe "GhcTest"
    (do ghc-module-name-test
        imports-from-ghc-test)))

(defn (:: ghc-module-name-test Spec)
  (describe "ghc-module-name-test"
    (it "should return actual version for Ghc.Util.Outputable"
      (cond-expand
        [(<= 900 :ghc)
         (mapM- (\ (, name _ )
                  (expand-form ghc-module-name
                               `(ghc-module-name ,name)
                               name))
                ghc-module-names-pre-900)]
        [otherwise
         (mapM- (\ (, in-name out-name)
                  (expand-form ghc-module-name
                               `(ghc-module-name ,in-name)
                               out-name))
                ghc-module-names-pre-900)]))))

(defn (:: imports-from-ghc-test Spec)
  (describe "imports-from-ghc-test"
    (it "should return import declarations"
      (cond-expand
        [(<= 900 :ghc)
         (expandTo
          (imports-from-ghc
           (GHC.Types.Basic ((SourceText ..))))
          (:begin
            (import GHC.Types.Basic ((SourceText ..)))))]
        [otherwise
         (expandTo
          (imports-from-ghc
           (GHC.Types.Basic ((SourceText ..))))
          (:begin
            (import BasicTypes ((SourceText ..)))))]))))
