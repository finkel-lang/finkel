;;; Main entry point

(:require Finkel.Core)

(defmodule Finkel.Tool.Main
  (export main
          commands)
  (import
   ;; base
   (System.Environment (getArgs))

   ;; Internal
   (Finkel.Tool.Eval)
   (Finkel.Tool.Help)
   (Finkel.Tool.Make)
   (Finkel.Tool.Repl)
   (Finkel.Tool.Version)))

(defn (:: main (IO ()))
  "Main entry point function for the executable."
  (case-do getArgs
    (: name rest) (maybe (show-usage commands)
                         (flip cmd-act rest)
                         (find-command commands name))
    _ (show-usage commands)))

(defn (:: commands [Command])
  "Available commands in the executable."
  [(Command "eval" "evaluate given form" evalMain)
   (Command "help" "show help information" (helpMain commands))
   (Command "make" "compile source codes" makeMain)
   (Command "repl" "start interactive REPL" replMain)
   (Command "version" "show version" versionMain)])
