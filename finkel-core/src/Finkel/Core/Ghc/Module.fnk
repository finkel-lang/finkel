;;; Module containing ghc version compatibililty macro.

(module Finkel.Core.Ghc.Module
  ;; Functions
  ghc-module-names-pre-900

  ;; Macros
  ghc-module-name
  imports-from-ghc)

;;; finkel-kernel
(import Language.Finkel)

;;; Internal
(import Finkel.Core.Ghc.Version)
(import Finkel.Core.Stage0)


;;; Auxiliary functions

(:doc "List of `Code' pairs, to relate module names in ghc 9.0.1 with module
names in older versions.")
(:: ghc-module-names-pre-900 [(, Code Code)])
(= ghc-module-names-pre-900
  [(, 'GHC 'GHC)

   (, 'GHC.Core.FamInstEnv 'FamInstEnv)
   (, 'GHC.Core.InstEnv 'InstEnv)
   (, 'GHC.Core.Ppr.TyThing 'PprTyThing)
   (, 'GHC.Core.TyCo.Rep 'TyCoRep)

   (, 'GHC.Data.Bag 'Bag)
   (, 'GHC.Data.FastString 'FastString)
   (, 'GHC.Data.OrdList 'OrdList)
   (, 'GHC.Data.StringBuffer 'StringBuffer)

   (, 'GHC.Driver.Finder 'Finder)
   (, 'GHC.Driver.Main 'HscMain)
   (, 'GHC.Driver.Make 'GhcMake)
   (, 'GHC.Driver.Monad 'GhcMonad)
   (, 'GHC.Driver.Session 'DynFlags)
   (, 'GHC.Driver.Types 'HscTypes)

   (, 'GHC.Iface.Syntax 'IfaceSyn)

   (, 'GHC.Parser 'Parser)
   (, 'GHC.Parser.Lexer 'Lexer)
   (, 'GHC.Parser.PostProcess 'RdrHsSyn)

   (, 'GHC.Runtime.Debugger 'Debugger)
   (, 'GHC.Runtime.Eval 'InteractiveEval)
   (, 'GHC.Runtime.Interpreter 'GHCi)
   (, 'GHC.Runtime.Linker 'Linker)

   (, 'GHC.Settings.Config 'Config)

   (, 'GHC.Types.Basic 'BasicTypes)
   (, 'GHC.Types.Name 'Name)
   (, 'GHC.Types.Name.Set 'NameSet)
   (, 'GHC.Types.SrcLoc 'SrcLoc)
   (, 'GHC.Types.Var 'Var)

   (, 'GHC.Unit.Module 'Module)

   (, 'GHC.Utils.Error 'ErrUtils)
   (, 'GHC.Utils.IO.Unsafe 'FastFunctions)
   (, 'GHC.Utils.Lexeme 'Lexeme)
   (, 'GHC.Utils.Misc 'Util)
   (, 'GHC.Utils.Outputable 'Outputable)])

(:: rename (-> Code Code))
(= rename name
  (case (reads cProjectVersionInt)
    [(, v "")] (if (<= (:: 900 Int) v)
                   name
                   (case (lookup name ghc-module-names-pre-900)
                     (Just found) (asLocOf found name)
                     _ (error (++ "rename: cannot find " (show name)))))
    _ (error "rename: panic")))

(:: make-import (-> Code Code))
(= make-import form
  `(import ,(rename (car form)) ,@(cdr form)))


;;; Exported

(:doc "Macro to get module name from @ghc@ package.")
(:: ghc-module-name Macro)
(= ghc-module-name
  (Macro (\ form (return (rename (car (cdr form)))))))

(:doc "Macro for version compatible import declaration for @ghc@.

Expects module names in latest released @ghc@, returns old module name as
necessary. Takes multiple modules in single form.

This macro is for finkel internal use. The covered modules are those used by
@finkel-core@ and @finkel-tool@ packages.")
(:: imports-from-ghc Macro)
(= imports-from-ghc
  (Macro (\ form
           (case (unCode (cdr form))
             (List xs) (pure `(:begin
                                ,@(map make-import xs)))
             _ (finkelSrcError form "imports-from-ghc: not a list")))))
